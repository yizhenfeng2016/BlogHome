<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一阵风</title>
  
  <subtitle>博客空间</subtitle>
  <link href="https://yizhenfeng2016.github.io/atom.xml" rel="self"/>
  
  <link href="https://yizhenfeng2016.github.io/"/>
  <updated>2022-03-05T17:25:03.254Z</updated>
  <id>https://yizhenfeng2016.github.io/</id>
  
  <author>
    <name>一阵风</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>漏洞扫描工具--AppScan和Nessus</title>
    <link href="https://yizhenfeng2016.github.io/posts/e3c6b0aa.html"/>
    <id>https://yizhenfeng2016.github.io/posts/e3c6b0aa.html</id>
    <published>2022-03-05T17:23:54.000Z</published>
    <updated>2022-03-05T17:25:03.254Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="漏洞扫描工具–AppScan和Nessus"><a href="#漏洞扫描工具–AppScan和Nessus" class="headerlink" title="漏洞扫描工具–AppScan和Nessus"></a>漏洞扫描工具–AppScan和Nessus</h3><h5 id="1-AppScan安装"><a href="#1-AppScan安装" class="headerlink" title="1.AppScan安装"></a>1.AppScan安装</h5><p>参考：<a href="http://luckyzmj.cn/posts/6c5da8c0.html">http://luckyzmj.cn/posts/6c5da8c0.html</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">下载地址：https://pan.baidu.com/s/1LhVlrLawEC-_nsCSkY5GVQ提取码：g99w<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>AppScan 推出了新的标准技术预览代码版本，启动 <code>AppScanGui.exe</code> 即可</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305134150615.png" alt="image-20220305134150615"></p><h5 id="2-Nessus安装（centos7）"><a href="#2-Nessus安装（centos7）" class="headerlink" title="2.Nessus安装（centos7）"></a>2.Nessus安装（centos7）</h5><p>参考：<a href="http://luckyzmj.cn/posts/477c90d0.html">http://luckyzmj.cn/posts/477c90d0.html</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.下载xxx.rpm https://www.tenable.com/downloads/nessus2.上传到/root3.安装，自动安装到/opt目录 rpm -ivh xxx.rpm4.systemctl start nessusd.service5.安装firewalld  yum install -y firewalld firewall-config  配置  firewall-cmd --zone=public --add-port=8834/tcp --permanent  firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装完成后进行系统设置，打开访问网址 <code>https://127.0.0.1:8834</code>，初始化扫描器。</p><p>根据提示步骤，选择 <code>Managed Scanner</code></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135303641.png" alt="image-20220305135303641"></p><p>再选择 <code>Tenable.sc</code></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135317574.png" alt="image-20220305135317574"></p><p>最后，点击继续，创建账号密码即可登录</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135351233.png" alt="image-20220305135351233"></p><h6 id="更新漏洞库"><a href="#更新漏洞库" class="headerlink" title="更新漏洞库"></a>更新漏洞库</h6><ul><li>注册地址：<a href="https://zh-cn.tenable.com/products/nessus/nessus-essentials">https://zh-cn.tenable.com/products/nessus/nessus-essentials</a></li></ul><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135451298.png" alt="image-20220305135451298"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.打开安装目录 /opt/nessus/sbin ./nessuscli fetch --challenge2.下载离线插件 打开网址 https://plugins.nessus.org/v2/offline.php，填入上两步获取的内容，即可得一个离线的插件包，选择合适的版本进行下载，拖到服务器上面安装即可。命令：./nessuscli update all-2.0.tar.gz。另外需要将网页上的license保存下来，稍后有用。提示：如果执行命令的时候出现了类似说你的软件是从哪copy来的吧，意思就是你的软件没有激活。输入./nessuscli fetch --register-offline nessus.license，就可以顺利执行命令了。注意：更新完漏洞库后，记住version版本号，如上述中的version版本号为 202203041934，之后破解时会用到这个。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135828178.png" alt="image-20220305135828178"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305135847587.png" alt="image-20220305135847587"></p><h6 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.重启服务（systemctl restart nessusd）后，打开nessus页面，确认插件编译完成后，出现登录框，才能找到网上说的plugin_feed_info.inc 这两个文件，否则是没有生成的 find ./ -name plugin* 2.打开plugin_feed_info.incPLUGIN_SET = "202203041934";PLUGIN_FEED = "ProfessionalFeed (Direct)";PLUGIN_FEED_TRANSPORT = "Tenable Network Security Lightning";3.重启服务（systemctl restart nessusd）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305140017307.png" alt="image-20220305140017307"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305140048880.png" alt="image-20220305140048880"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305140538985.png" alt="image-20220305140538985"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305140758953.png" alt="image-20220305140758953"></p><h6 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h6><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305141347518.png" alt="image-20220305141347518"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305141403005.png" alt="image-20220305141403005"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305141417616.png" alt="image-20220305141417616"></p><p>如果你在破解完后使用工具扫描网站，发现每个目标扫描时间都是几秒钟就立刻结束，扫描不到任何漏洞。那么很有可能是你在破解重启Nessus服务环节的时候，软件自动把Nessus的漏洞库插件全清除了，也就是在安装目录下（<code>C:\ProgramData\Tenable\Nessus\nessus\plugins\</code>）没有任何漏洞插件文件了。</p><p>如果真碰到这种情况，那就按照之前的步骤重新更新下漏洞库，然后再破解一遍。或者是在更新完漏洞库后，将<code>nessus\plugins\</code>目录拷贝一份，等破解完重启服务，重进Nessus加载完后退出，再将事先拷贝的文件复制回去。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Centos7 安装后修改网络</title>
    <link href="https://yizhenfeng2016.github.io/posts/d8b9b974.html"/>
    <id>https://yizhenfeng2016.github.io/posts/d8b9b974.html</id>
    <published>2022-03-05T17:22:54.000Z</published>
    <updated>2022-03-05T17:25:03.237Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Centos7-安装后修改网络"><a href="#Centos7-安装后修改网络" class="headerlink" title="Centos7 安装后修改网络"></a>Centos7 安装后修改网络</h3><pre class="line-numbers language-she1l" data-language="she1l"><code class="language-she1l">1.配置 /etc/sysconfig/network-scripts/ifcfg-ensxxTYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=staticDEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=f40e4c3f-b0b0-4729-8170-ef8ee6ad7beeDEVICE=ens33ONBOOT=yesIPADDR=192.168.242.37GATEWAY=192.168.242.2NETMASK=255.255.255.0DNS1=192.168.242.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220305121453100.png" alt="image-20220305121453100"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>直接用命令启动docker的镜像</title>
    <link href="https://yizhenfeng2016.github.io/posts/77749a8a.html"/>
    <id>https://yizhenfeng2016.github.io/posts/77749a8a.html</id>
    <published>2022-03-05T17:22:22.000Z</published>
    <updated>2022-03-05T17:25:03.255Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="直接用命令启动docker的镜像"><a href="#直接用命令启动docker的镜像" class="headerlink" title="直接用命令启动docker的镜像"></a>直接用命令启动docker的镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run -itd --add-host dev.db.java110.com:192.168.242.33 --add-host dev.redis.java110.com:192.168.242.33 --add-host dev.java110.com:192.168.242.33 -e MAX_MEM="-Xmx256m" -e MIN_MEM="-Xms256m" -e mysqlpwd="hc12345678" -e ACTIVE="zihao" -e redispwd="hc12345678" -p 1199:1199 --name myjob myjob:V20220224--name myjob //镜像名--add-host dev.db.java110.com:192.168.242.33 //在启动容器时，向/etc/hosts文件添加一个host:ip的映射-e MIN_MEM="-Xms256m" //环境变量-p 1199:1199 //端口映射-v /home/data/mysql:/var/lib/mysql //磁盘映射<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226203218121.png" alt="image-20220226203138161"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226203138161.png" alt="image-20220226203218121"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226203252273.png" alt="image-20220226203231550"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226203231550.png" alt="image-20220226203252273"></p><p>相当于：dockers-compose.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">service-oa</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>qingdao.aliyuncs.com/homecommunity/service<span class="token punctuation">-</span>oa<span class="token punctuation">:</span>V20220105180358        <span class="token key atrule">volumes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token key atrule">extra_hosts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> dev.java110.com<span class="token punctuation">:</span>192.168.242.33            <span class="token punctuation">-</span> dev.redis.java110.com<span class="token punctuation">:</span>192.168.242.33            <span class="token punctuation">-</span> dev.db.java110.com<span class="token punctuation">:</span>192.168.242.33        <span class="token key atrule">environment</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> MAX_MEM<span class="token punctuation">:</span><span class="token punctuation">-</span>Xmx64m            <span class="token punctuation">-</span> MIN_MEM<span class="token punctuation">:</span><span class="token punctuation">-</span>Xms64m            <span class="token punctuation">-</span> mysqlpwd<span class="token punctuation">:</span>hc12345678            <span class="token punctuation">-</span> ACTIVE<span class="token punctuation">:</span>zihao            <span class="token punctuation">-</span> redispwd<span class="token punctuation">:</span>hc12345678<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>测试知识点之操作系统考察</title>
    <link href="https://yizhenfeng2016.github.io/posts/68a5cde4.html"/>
    <id>https://yizhenfeng2016.github.io/posts/68a5cde4.html</id>
    <published>2022-03-05T17:21:42.000Z</published>
    <updated>2022-03-05T17:25:03.255Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="测试知识点之操作系统考察"><a href="#测试知识点之操作系统考察" class="headerlink" title="测试知识点之操作系统考察"></a>测试知识点之操作系统考察</h3><ol><li>补码，最高位为0，表示正数，最高位为1，表示负数；例如8位二进制数字表示范围为-128<del>127，0000 0000 ~0111 1111表示0</del>127，1000 0000<del>1111 1111表示-128</del>-1，1000 0000的补码是原码取反+1，1000 0000取反0111 1111为127，127+1为128，表示-128</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Nginx部署Vue项目</title>
    <link href="https://yizhenfeng2016.github.io/posts/42b247b3.html"/>
    <id>https://yizhenfeng2016.github.io/posts/42b247b3.html</id>
    <published>2022-03-05T17:21:12.000Z</published>
    <updated>2022-03-05T17:25:03.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Nginx部署Vue项目"><a href="#Nginx部署Vue项目" class="headerlink" title="Nginx部署Vue项目"></a>Nginx部署Vue项目</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.Vue项目打包# 打包正式环境npm run build:prod# 打包预发布环境npm run build:stage2.将打包后的dist文件夹上传至服务器# 远程上传 或 通过ftps工具上传本次上传项目路径为 /usr/local/webapp/3.配置Nginx的conf文件vim /etc/nginx/nginx.conf#在http{}修改如下server { listen 80; server_name ip; #服务器ip或者域名 # 注意设定 root路径是有dist的 location / {   root /usr/local/webapp/dist;   index /index.html; } #跨域 ip和port自行替换 location /adminApi {   proxy_pass http://ip:port; }}4.注意Nginx的配置，例如添加header配置5.使配置生效nginx -s reloadnginx -s stopnginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安装HC开源物业系统版本（前后端分离）</title>
    <link href="https://yizhenfeng2016.github.io/posts/d4a04eff.html"/>
    <id>https://yizhenfeng2016.github.io/posts/d4a04eff.html</id>
    <published>2022-03-05T17:20:34.000Z</published>
    <updated>2022-03-05T17:25:03.250Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装HC开源物业系统版本（前后端分离）"><a href="#安装HC开源物业系统版本（前后端分离）" class="headerlink" title="安装HC开源物业系统版本（前后端分离）"></a>安装HC开源物业系统版本（前后端分离）</h3><p>1.日志出现  is not functionally dependent on columns in GROUP BY clause，</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">原因：/etc/my.conf配置出错sql_mode = ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION修改成：sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.日志出现 The last packet sent successfully to the server was 0 milliseconds ago……</p><h1 id="Caused-by-javax-net-ssl-SSLHandshakeException-No-appropriate-protocol-protocol-is-disabled-or-ciph"><a href="#Caused-by-javax-net-ssl-SSLHandshakeException-No-appropriate-protocol-protocol-is-disabled-or-ciph" class="headerlink" title="Caused by:javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or ciph"></a><a href="https://www.cnblogs.com/renxiaozhao/p/15639342.html">Caused by:javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or ciph</a></h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.找到java安装目录[hadoop@192 /]$ which java/bin/java[hadoop@192 /]$ ls -lrt /bin/javalrwxrwxrwx. 1 root root 22 4月  17 06:25 /bin/java -&gt; /etc/alternatives/java[hadoop@192 /]$ ls -lrt /etc/alternatives/javalrwxrwxrwx. 1 root root 72 4月  17 06:25 /etc/alternatives/java -&gt; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-11.b12.el7.x86_64/jre/bin/java[hadoop@192 /]$2.注释掉SSL3配置文件($JAVA_HOME/jre/lib/security/java.security)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220227231550692.png" alt="image-20220227231550692"></p><p>3.mysql远程授权</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">create user 'TT'@'%' identified by 'hc12345678';create user 'hc_community'@'%' identified by 'hc12345678';flush privileges;grant all privileges on `tt`.* to 'TT'@'%';grant all privileges on `hc_community`.* to 'hc_community'@'%';flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.日志出现 Can’t write; duplicate key in table ‘act_ge_bytearray’</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.配置 etc/my.conflower_case_table_names=1  //忽略大小写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5.出现 mysql 1049 -unknown database</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">原因：设置了lower_case_table_names=1  //忽略大小写，而建表或者建数据库时用了大写解决办法：要先全部转换成小写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>6.数据库mysql时区设置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">--查看数据库时区设置mysql&gt; show variables like "%time_zone%";+------------------+--------+| Variable_name    | Value  |+------------------+--------+| system_time_zone | UTC    || time_zone        | SYSTEM |+------------------+--------+1.配置 /etc/my.confdefault-time-zone = '+08:00' <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>7.设置hosts</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">然后修改/etc/hosts文件vi /etc/hosts打开之后的内容是：127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6然后你在里面加一行：192.168.0.157 dev.api.java110.com192.168.0.157 dev.java110.com192.168.0.157 dev.redis.java110.com192.168.0.157 dev.db.java110.com重启网络:systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8.redis 远程连接不上</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.配置  redis.confbind 127.0.0.1 改成bind 0.0.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>9.redis设置密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.配置  redis.confrequirepass hc12345678<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Centos7 安装redis</title>
    <link href="https://yizhenfeng2016.github.io/posts/127bace5.html"/>
    <id>https://yizhenfeng2016.github.io/posts/127bace5.html</id>
    <published>2022-03-05T17:19:56.000Z</published>
    <updated>2022-03-05T17:25:03.235Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Centos7-安装redis"><a href="#Centos7-安装redis" class="headerlink" title="Centos7 安装redis"></a>Centos7 安装redis</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.安装# cd /opt# wget http://download.redis.io/releases/redis-4.0.14.tar.gz# tar xzf redis-4.0.14.tar.gz# cd redis-4.0.14# make -j4 &amp;&amp; make install# ll /usr/local/bin/redis*-rwxr-xr-x. 1 root root 2452112 May  2 21:40 /usr/local/bin/redis-benchmark-rwxr-xr-x. 1 root root 5777688 May  2 21:40 /usr/local/bin/redis-check-aof-rwxr-xr-x. 1 root root 5777688 May  2 21:40 /usr/local/bin/redis-check-rdb-rwxr-xr-x. 1 root root 2618136 May  2 21:40 /usr/local/bin/redis-clilrwxrwxrwx. 1 root root      12 May  2 21:40 /usr/local/bin/redis-sentinel -&gt; redis-server-rwxr-xr-x. 1 root root 5777688 May  2 21:40 /usr/local/bin/redis-server2.添加用户和目录# useradd -r -s /sbin/nologin redis# mkdir -p /data/redis# chown -R redis:redis /data/redis# mkdir -p /etc/redis# cp redis.conf /etc/redis/3.修改redis.conf# vim /etc/redis/redis.conf# If you run Redis from upstart or systemd, Redis can interact with your# supervision tree. Options:#   supervised no      - no supervision interaction#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET#   supervised auto    - detect upstart or systemd method based on#                        UPSTART_JOB or NOTIFY_SOCKET environment variables# Note: these supervision methods only signal "process is ready."#       They do not enable continuous liveness pings back to your supervisor.supervised systemd# The working directory.## The DB will be written inside this directory, with the filename specified# above using the 'dbfilename' configuration directive.## The Append Only File will also be created inside this directory.## Note that you must specify a directory here, not a file name.dir /data/redis# By default, if no "bind" configuration directive is specified, Redis listens# for connections from all the network interfaces available on the server.# It is possible to listen to just one or multiple selected interfaces using# the "bind" configuration directive, followed by one or more IP addresses.## Examples:## bind 192.168.1.100 10.0.0.1# bind 127.0.0.1 ::1## ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the# internet, binding to all the interfaces is dangerous and will expose the# instance to everybody on the internet. So by default we uncomment the# following bind directive, that will force Redis to listen only into# the IPv4 lookback interface address (this means Redis will be able to# accept connections only from clients running into the same computer it# is running).## IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES# JUST COMMENT THE FOLLOWING LINE.# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~bind 127.0.0.1 # 允许远程连接，修改成 0.0.0.0.# Require clients to issue AUTH &lt;PASSWORD&gt; before processing any other# commands.  This might be useful in environments in which you do not trust# others with access to the host running redis-server.## This should stay commented out for backward compatibility and because most# people do not need auth (e.g. they run their own servers).## Warning: since Redis is pretty fast an outside user can try up to# 150k passwords per second against a good box. This means that you should# use a very strong password otherwise it will be very easy to break.## requirepass password            # Optional.4.配置systemd# vim /usr/lib/systemd/system/redis.service[Unit]Description=Redis ServerDocumentation=https://redis.io/After=network.target[Service]Type=simpleUser=redisGroup=redisExecStart=/usr/local/bin/redis-server /etc/redis/redis.confExecStop=/usr/local/bin/redis-cli shutdown[Install]WantedBy=multi-user.target5.启动服务器# systemctl daemon-reload# systemctl start redis# systemctl enable redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>禅道开源版安装（包括mysql安装--使用tar.gz）</title>
    <link href="https://yizhenfeng2016.github.io/posts/ee7aa2f7.html"/>
    <id>https://yizhenfeng2016.github.io/posts/ee7aa2f7.html</id>
    <published>2022-03-05T17:19:24.000Z</published>
    <updated>2022-03-05T17:25:03.256Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="禅道开源版安装"><a href="#禅道开源版安装" class="headerlink" title="禅道开源版安装"></a>禅道开源版安装</h3><ol><li><p>企业版试用半年：</p><p>下载：<a href="https://www.zentao.net/download/zentaopms16.4-80496.html">禅道16.4版本发布，支持导入Jira数据和SonarQube项目管理 - 禅道下载 - 禅道开源项目管理软件 (zentao.net)</a></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220225151009035.png" alt="image-20220225151009035"></p><p><a href="https://www.zentao.net/book/zentaopmshelp/40.html">选择适合您的安装方法 - 禅道开源版使用帮助 - 禅道开源项目管理软件 (zentao.net)</a></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220225150824523.png" alt="image-20220225150824523"></p></li><li><p>开源版安装：参考<a href="https://www.jianshu.com/p/7438878f378a">利用源码方式在centos7安装开源版禅道 - 简书 (jianshu.com)</a></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220225151124005.png" alt="image-20220225151124005"></p><ul><li><p>​    rpm安装PHP7</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpmyum install php70wyum install php70w-pdoyum install php70w-pdo_mysqlyum install php70w-jsonyum install php70w-filteryum install php70w-opensslyum install php70w-mbstringyum install php70w-zlibyum install php70w-curlyum install php70w-gdyum install php70w-iconv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装Apache</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、检查是否安装过apacherpm -qa | grep httpd若没有安装则继续安装：2、安装apacheyum install httpd-devel.x86_643、启动apache服务systemctl restart httpd.service注意事项：（1）这里若是启动失败，注意查看防火墙是否关闭，若没关闭，执行下列语句firewall-cmd --permanent --zone=public --add-service=httpfirewall-cmd --permanent --zone=public --add-service=httpsfirewall-cmd --reload（2）若提示端口被占用，杀掉占用端口的进程或者是修改apache配置文件vi /etc/httpd/conf/httpd.confServerName 192.168.52.131:8989Listen 8989当然这里不一定非要设置为8989端口，也可以设置其他的没被占用的端口。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><ul><li><p>安装mysql5.7（卸载 mariadb(rpm -qa|grep mariadb)前，请将/usr/lib64/mysql/libmysqlclient.so.18复制到某个目录，卸载后重新复制回去，这个是用来动态加载pdo_mysql.so，如果没有这个文件会报加载错误，可以通过php -m查看php插件）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.下载：http://uni.mirrors.163.com/mysql/Downloads/MySQL-5.7/ mysql-5.7.36-el7-x86_64.tar.gz2.创建安装账户  useradd -s /bin/false -d /usr/local/mysql  mysql  id mysql3.安装过程[root@GeekDevOps ~]# tar -xvzf mysql-5.7.36-el7-x86_64.tar.gz -C /usr/local/mysql/[root@GeekDevOps mysql]# cd /usr/local/mysql/mysql-5.7.36-el7-x86_64/[root@GeekDevOps mysql-5.7.36-el7-x86_64]# mv * ../[root@GeekDevOps mysql-5.7.36-el7-x86_64]# cd ..[root@GeekDevOps mysql]# rmdir mysql-5.7.36-el7-x86_64/[root@GeekDevOps mysql]# mkdir data[root@GeekDevOps mysql]# chown -R mysql.mysql ../mysql[root@GeekDevOps mysql]# cd bin[root@GeekDevOps bin]# ./mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --initialize[root@GeekDevOps bin]# tail -100f ../data/error.log 2018-03-14T06:32:34.966407Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2018-03-14T06:32:36.208273Z 0 [Warning] InnoDB: New log files created, LSN=457902018-03-14T06:32:36.367294Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.2018-03-14T06:32:36.522777Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 7c405e3f-2751-11e8-8be8-000c29fb0102.2018-03-14T06:32:36.525594Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.2018-03-14T06:32:36.526540Z 1 [Note] A temporary password is generated for root@localhost: 7Eu;dsRqkY.3[root@GeekDevOps bin]# cp ../support-files/mysql.server /etc/init.d/mysqld4.配置过程（如果报没有/etc/my.cnf.d目录，就创建）[root@GeekDevOps ~]# vi /etc/my.cnf[mysqld]port = 3306basedir = /usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockpid-file=/usr/local/mysql/data/mysql.pidlog-error=/usr/local/mysql/data/error.logcharacter_set_server=utf8user=mysqlmax_connections=1500symbolic-links=0!includedir /etc/my.cnf.d5.启动服务登录（报The server quit without updating PID file....,给目录授权chown -R mysql.mysql /usr/local/mysql/data;chmod -R 755 /usr/local/mysql/data ）添加软连接[root@GeekDevOps ~]# ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql [root@GeekDevOps ~]# service mysqld start[root@GeekDevOps ~]# mysql -u root -p[root@GeekDevOps ~]# 输入初始化密码&gt;mysql: set password=password('123456');6.设置开机自启//将服务文件拷贝到init.d下，并重命名为mysqldcp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld//赋予可执行权限chmod +x /etc/init.d/mysqld//添加服务chkconfig --add mysqld//显示服务列表chkconfig --list7.设置允许远程连接//登录mysql -u root -p//输入密码use mysql;select host from user where user='root';update user set host = '%' where user ='root';flush privileges;//使配置立即生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>安装禅道</p><pre class="line-numbers language-none"><code class="language-none">1、从禅道官网（https://www.zentao.net/）下载开源版文件。2、解压得到zentaopms目录到webserver对应的目录，如apache的 /var/www/html/ 目录下。3、通过浏览器访问http://ip:端口/zentaopms/www/index.php（如我的机器为http://1932.168.242。35:80/zentaopms/www/index.php），系统会自动转入安装程序<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226155921513.png" alt="image-20220226155921513"></p><p>问题1：用php -m 查看php安装的插件（一般不用修改php.ini），如果加载pdo_mysql.so有误，报libmysqlclient.so.18: cannot open shared object file: ….</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find / -name libmysqlclient.so.18 //如果没有找到，是不是卸载mariadb前没有备份如果有，添加软连接到/usr/lib;/usr/lib64ln -s xxxx/libmysqlclient.so.18 /usr/lib/libmysqlclient.so.18ln -s xxxx/libmysqlclient.so.18 /usr/lib64/libmysqlclient.so.18php -m   //查看是否有pdo_mysql.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题2：权限问题，要给全部权限</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod 777 -R /var/www/html/zentaopms/temp/chmod 777 -R /var/www/html/zentaopms/www/data/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输入数据库密码</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195501753.png" alt="image-20220226195501753"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195532112.png" alt="image-20220226195532112"></p><p>由于没有my.php文件，需要先创建文件，然后将上面的配置复制过去</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195844852.png" alt="image-20220226195750924"></p></li></ul><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195750924.png" alt="image-20220226195811098"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195811098.png" alt="image-20220226195844852"></p><p>选择登录禅道管理系统</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220226195922114.png" alt="image-20220226195922114"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>centos7 防火墙操作及开放端口</title>
    <link href="https://yizhenfeng2016.github.io/posts/1db93dbb.html"/>
    <id>https://yizhenfeng2016.github.io/posts/1db93dbb.html</id>
    <published>2022-03-05T17:18:58.000Z</published>
    <updated>2022-03-05T17:25:03.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="centos7-防火墙操作及开放端口"><a href="#centos7-防火墙操作及开放端口" class="headerlink" title="centos7 防火墙操作及开放端口"></a>centos7 防火墙操作及开放端口</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.查看已开放的端口firewall-cmd --list-ports2.开放单个端口(开放后需要要重启防火墙才生效)firewall-cmd --zone=public --add-port=8080/tcp --permanent3.开放多个端口(开放后需要要重启防火墙才生效)firewall-cmd --zone=public --add-port=20000-29999/tcp --permanent(--permanent  为永久生效，不加为单次有效(重启失效))4.关闭端口(关闭后需要要重启防火墙才生效)firewall-cmd --zone=public --remove-port=8080/tcp --permanent5.查看端口是否打开firewall-cmd --zone= public --query-port=80/tcp6.查看防火墙状态(两种方式)firewall-cmd --statesystemctl status firewalld7.开启防火墙systemctl start firewalld8.重启防火墙 (两种方式)firewall-cmd --reloadsystemctl restart firewalld9.设置开机启动防火墙systemctl enable firewalld10.查看防火墙设置开机自启是否成功systemctl is-enabled firewalld;echo $?11.禁止防火墙开机启动systemctl disable firewalld12.停止防火墙systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>top和jstack查看java进程日志（包括线程）</title>
    <link href="https://yizhenfeng2016.github.io/posts/d97048d6.html"/>
    <id>https://yizhenfeng2016.github.io/posts/d97048d6.html</id>
    <published>2022-03-05T17:18:28.000Z</published>
    <updated>2022-03-05T17:25:03.246Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="top和jstack查看java进程日志（包括线程）"><a href="#top和jstack查看java进程日志（包括线程）" class="headerlink" title="top和jstack查看java进程日志（包括线程）"></a>top和jstack查看java进程日志（包括线程）</h3><ol><li><p>查看Java的pid</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -ef|grep java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224105331299.png" alt="image-20220224105331299"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">top<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224105634825.png" alt="image-20220224105416613"></p><p>shift+P按cpu排序</p></li><li><p>如果java是在docker中启动，需要进入docker</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224105416613.png" alt="image-20220224105634825"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker exec -it xxx /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224110007652.png" alt="image-20220224105915061"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">top<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224110337769.png" alt="image-20220224110007652"></p></li><li><p>进入进程查看哪个线程占用最高</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">top -Hp pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224110142365.png" alt="image-20220224110142365"></p><p>例如线程16占用最高，转换成16进制为0x10：<a href="https://tool.oschina.net/hexconvert">在线进制转换 (oschina.net)</a></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224110733289.png" alt="image-20220224110337769"></p></li><li><p>输出java进程的日志，并查找0x10</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">jstack pid |grep '0x10' -A 10 //查找含有0x10的行，并输出后10行jstack pid |grep '0x10' -C 10 //查找含有0x10的行，并输出前后10行jstack pid &gt;test.log //将日志写进test.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224105915061.png" alt="image-20220224110733289"></p></li><li><p>将docker 日志复制到主机上</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pwd //查看当前目录docker cp xxx(容器id):/root/test.log /root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224111127165.png" alt="image-20220224111127165"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224111613432.png" alt="image-20220224111613432"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>查看java命令之jps</title>
    <link href="https://yizhenfeng2016.github.io/posts/8266feff.html"/>
    <id>https://yizhenfeng2016.github.io/posts/8266feff.html</id>
    <published>2022-03-05T17:17:50.000Z</published>
    <updated>2022-03-05T17:25:03.252Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="查看java命令之jps"><a href="#查看java命令之jps" class="headerlink" title="查看java命令之jps"></a>查看java命令之jps</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">jps -ml //查看当前机器上运行的java进程（包名 + main method的参数）jps -mlv 查看当前机器上运行的java进程(包名 + main method的参数 + JVM参数)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224112611391.png" alt="image-20220224112611391"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224112636028.png" alt="image-20220224112636028"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>查看java进程之jmap</title>
    <link href="https://yizhenfeng2016.github.io/posts/45a4cf73.html"/>
    <id>https://yizhenfeng2016.github.io/posts/45a4cf73.html</id>
    <published>2022-03-05T17:16:59.000Z</published>
    <updated>2022-03-05T17:25:03.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="查看java进程之jmap"><a href="#查看java进程之jmap" class="headerlink" title="查看java进程之jmap"></a>查看java进程之jmap</h3><ol><li><p>通过jmap命名查看堆中对象 jmap -histo:live 7869 | head -20 定位前20个</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">jmap -histo:live pid |head -20 //查看堆中对象,定位前20个jmap -histo [pid]  //查看JVM堆中对象详细占用情况<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224115757587.png" alt="image-20220224115127495"></p></li><li><p>通过jmap -dump导出内存文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">jmap -dump:format=b,file=文件名  pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220224115127495.png" alt="image-20220224115757587"></p></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>配置Java -jar 连接工具jvisualvm.exe</title>
    <link href="https://yizhenfeng2016.github.io/posts/c5d91d4.html"/>
    <id>https://yizhenfeng2016.github.io/posts/c5d91d4.html</id>
    <published>2022-03-05T17:16:16.000Z</published>
    <updated>2022-03-05T17:25:03.257Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="配置Java-jar-连接工具jvisualvm-exe"><a href="#配置Java-jar-连接工具jvisualvm-exe" class="headerlink" title="配置Java -jar 连接工具jvisualvm.exe"></a>配置Java -jar 连接工具jvisualvm.exe</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -jar -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1199 -Dcom.sun.management.jmxremote.rmi.port=1199 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.242.33  -Dspring.profiles.active=dev -Xms1024m -Xmx1024m /root/service-job.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>google浏览器插件Header Editor使用</title>
    <link href="https://yizhenfeng2016.github.io/posts/cd28e5d7.html"/>
    <id>https://yizhenfeng2016.github.io/posts/cd28e5d7.html</id>
    <published>2022-03-05T17:15:21.000Z</published>
    <updated>2022-03-05T17:25:03.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="google浏览器插件Header-Editor使用"><a href="#google浏览器插件Header-Editor使用" class="headerlink" title="google浏览器插件Header Editor使用"></a>google浏览器插件Header Editor使用</h3><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220225112837270.png" alt="image-20220225112837270"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/image-20220225113031083.png" alt="image-20220225113031083"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>查看centos7端口号占用情况</title>
    <link href="https://yizhenfeng2016.github.io/posts/e4d527ef.html"/>
    <id>https://yizhenfeng2016.github.io/posts/e4d527ef.html</id>
    <published>2022-03-05T17:14:40.000Z</published>
    <updated>2022-03-05T17:25:03.252Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="查看centos7端口号占用情况"><a href="#查看centos7端口号占用情况" class="headerlink" title="查看centos7端口号占用情况"></a>查看centos7端口号占用情况</h3><p>1.安装net-tools</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install net-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.使用netstat</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">netstat -nlp|grep 80netstat -ntlp //查看当前所有tcp端口netstat -an 查看网络端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用git命令</title>
    <link href="https://yizhenfeng2016.github.io/posts/7371eea5.html"/>
    <id>https://yizhenfeng2016.github.io/posts/7371eea5.html</id>
    <published>2022-03-05T17:14:03.000Z</published>
    <updated>2022-03-05T17:25:03.248Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="使用git命令"><a href="#使用git命令" class="headerlink" title="使用git命令"></a>使用git命令</h3><p>1.git clone <a href="http://xxx.git/">http://xxx.git</a>   下载全部代码，一般是第一次使用</p><p>  <strong>git clone -b</strong> **分支名仓库地址   **git clone -b v2.8.1 <a href="https://git.oschina.net/oschina/android-app.git">https://git.oschina.net/oschina/android-app.git</a></p><p>2.git pull  拉取更新</p><p>3.git status  查看当前git状态信息（查看是否有文件未提交）</p><pre class="line-numbers language-none"><code class="language-none">被追踪的（tracked）:已经加入文档库不被追踪的(untracked):没有加入文档库忽略的(ignored):忽略那些不需要管理的文件夹或文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4.git reset   不加参数(mixed)：保留工作目录，并清空暂存区</p><p>5.git fetch  是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中</p><p>6.git branch  列出当前分支清单</p><p>7.git checkout -f v2.1     -f，相当于 “–force”, 强制移动指针，忽略本地变化</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jenkins配置allure插件</title>
    <link href="https://yizhenfeng2016.github.io/posts/49415e41.html"/>
    <id>https://yizhenfeng2016.github.io/posts/49415e41.html</id>
    <published>2022-03-05T17:13:13.000Z</published>
    <updated>2022-03-05T17:25:03.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Jenkins配置allure插件"><a href="#Jenkins配置allure插件" class="headerlink" title="Jenkins配置allure插件"></a>Jenkins配置allure插件</h3><ol><li><p>安装allure插件</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211120221.png" alt="image-20220211115504038"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211120222.png" alt="image-20220211115541789"></p></li><li><p>安装allure</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211120223.png" alt="image-20220211115624968"></p></li><li><p>Jenkins配置allure安装路径</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211120224.png" alt="image-20220211115904074"></p></li><li><p>脚本执行完后输出报告：相对路径，完整路径=工作区目录+相对路径，生成的html报告路径固定为：工作区目录+allure-report</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211120225.png" alt="image-20220211120022386"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jenkins从gitee拉取代码到本地构建计划</title>
    <link href="https://yizhenfeng2016.github.io/posts/18291ef1.html"/>
    <id>https://yizhenfeng2016.github.io/posts/18291ef1.html</id>
    <published>2022-03-05T17:12:01.000Z</published>
    <updated>2022-03-05T17:25:03.236Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Jenkins从gitee拉取代码到本地构建计划"><a href="#Jenkins从gitee拉取代码到本地构建计划" class="headerlink" title="Jenkins从gitee拉取代码到本地构建计划"></a>Jenkins从gitee拉取代码到本地构建计划</h3><ol><li><p>添加凭证</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211114503.png" alt="image-20220211114502423"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211114604.png" alt="image-20220211114602533"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115338.png" alt="image-20220211114745382"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115339.png" alt="image-20220211114803949"></p></li><li><p>在项目配置中，配置工作区目录（下载代码到这里），输入gitee地址</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115034.png" alt="image-20220211115033379"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211114923.png" alt="image-20220211114919058"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115210.png" alt="image-20220211115209405"></p></li><li><p>build</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115340.png" alt="image-20220211115141597"></p></li><li><p>查看控制台日志</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115341.png" alt="image-20220211115303859"></p></li></ol><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211115342.png" alt="image-20220211115327968"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>pycharm使用git上传代码到gitee</title>
    <link href="https://yizhenfeng2016.github.io/posts/a64cc551.html"/>
    <id>https://yizhenfeng2016.github.io/posts/a64cc551.html</id>
    <published>2022-03-05T17:11:25.000Z</published>
    <updated>2022-03-05T17:25:03.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Pycharm使用git上传代码到gitee"><a href="#Pycharm使用git上传代码到gitee" class="headerlink" title="Pycharm使用git上传代码到gitee"></a>Pycharm使用git上传代码到gitee</h3><ol><li><p>pycharm安装git</p><p>如果系统没有安装git，pycharm点击VCS，选择版本控制，会提示要安装git，点击install</p></li><li><p>pycharm安装gitee插件</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211111653.png" alt="image-20220211111651882"></p></li><li><p>安装完gitee插件后，在pycharm输入账号密码登录gitee</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211112041.png" alt="image-20220211112040051"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211111937.png" alt="image-20220211111935844"></p></li><li><p>设置git 用户名和邮箱地址</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211112506.png" alt="image-20220211112505485"></p><p>在windows搜索git-bash，打开cmd命令</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name "一阵风2016"git config --global user.email "1029568690@qq.com"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211112710.png" alt="image-20220211112709214"></p></li><li><p>将本地项目代码第一次整体上传到gitee：VCS–导入到版本控制–Share Project On Gitee</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211113417.png" alt="image-20220211113415807"></p></li></ol><ol start="6"><li><p>更新代码到gitee：先commit到本地，然后push到gitee</p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211113724.png" alt="image-20220211113722744"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211113745.png" alt="image-20220211113744210"></p><p><img src="https://gitee.com/yizhenfeng2016/blog-image/raw/master/img/20220211114117.png" alt="image-20220211114116895"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jmeter测试websocket</title>
    <link href="https://yizhenfeng2016.github.io/posts/cf72ddf6.html"/>
    <id>https://yizhenfeng2016.github.io/posts/cf72ddf6.html</id>
    <published>2022-03-05T17:09:20.000Z</published>
    <updated>2022-03-05T17:25:03.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\BlogHome\assets\css\APlayer.min.css"><script src="\BlogHome\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Jmeter测试websocket"><a href="#Jmeter测试websocket" class="headerlink" title="Jmeter测试websocket"></a>Jmeter测试websocket</h3><ol><li>参考文献：<a href="https://blog.csdn.net/smooth00/article/details/81355110">(57条消息) JMeter测试WebSocket的经验总结_smooth的博客-CSDN博客_jmeter websocket</a></li><li>配置</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\BlogHome\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\BlogHome\assets\js\A</summary>
      
    
    
    
    
  </entry>
  
</feed>
